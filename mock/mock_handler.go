// Code generated by MockGen. DO NOT EDIT.
// Source: handler/wallet.go

// Package mock is a generated GoMock package.
package mock

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIWalletHandler is a mock of IWalletHandler interface.
type MockIWalletHandler struct {
	ctrl     *gomock.Controller
	recorder *MockIWalletHandlerMockRecorder
}

// MockIWalletHandlerMockRecorder is the mock recorder for MockIWalletHandler.
type MockIWalletHandlerMockRecorder struct {
	mock *MockIWalletHandler
}

// NewMockIWalletHandler creates a new mock instance.
func NewMockIWalletHandler(ctrl *gomock.Controller) *MockIWalletHandler {
	mock := &MockIWalletHandler{ctrl: ctrl}
	mock.recorder = &MockIWalletHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIWalletHandler) EXPECT() *MockIWalletHandlerMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockIWalletHandler) Create(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Create", w, r)
}

// Create indicates an expected call of Create.
func (mr *MockIWalletHandlerMockRecorder) Create(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockIWalletHandler)(nil).Create), w, r)
}

// GetAll mocks base method.
func (m *MockIWalletHandler) GetAll(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetAll", w, r)
}

// GetAll indicates an expected call of GetAll.
func (mr *MockIWalletHandlerMockRecorder) GetAll(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockIWalletHandler)(nil).GetAll), w, r)
}

// GetByUsername mocks base method.
func (m *MockIWalletHandler) GetByUsername(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetByUsername", w, r)
}

// GetByUsername indicates an expected call of GetByUsername.
func (mr *MockIWalletHandlerMockRecorder) GetByUsername(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByUsername", reflect.TypeOf((*MockIWalletHandler)(nil).GetByUsername), w, r)
}

// HandleFunc mocks base method.
func (m *MockIWalletHandler) HandleFunc(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "HandleFunc", w, r)
}

// HandleFunc indicates an expected call of HandleFunc.
func (mr *MockIWalletHandlerMockRecorder) HandleFunc(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleFunc", reflect.TypeOf((*MockIWalletHandler)(nil).HandleFunc), w, r)
}

// Update mocks base method.
func (m *MockIWalletHandler) Update(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Update", w, r)
}

// Update indicates an expected call of Update.
func (mr *MockIWalletHandlerMockRecorder) Update(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockIWalletHandler)(nil).Update), w, r)
}
